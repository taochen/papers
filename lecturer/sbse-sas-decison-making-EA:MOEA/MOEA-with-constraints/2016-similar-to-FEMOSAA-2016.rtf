{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 This approach has some similarity to our FEMOSAA, at design time, according to some given architecture design, it generate solutions (from basic adaptation operators, i.e., features in FM) to form the search spaces, which is constrained by dependency. The fitness function it produced by model checking/simulation.\
\
The Alternative generator however return both valid and invalid solution, which is different from FEMOSAA, the authors argue that this is because invalid solution can be good in evolutions (but setting their objective values to very bad)\
\
the fitness function is based on aggregation of business value of functional and non-functional attributes, which is money\
\
\
bad\
\
However, considering too much invalid ones cannot guarantee the search of valid solution and, at the same time, wasting function evaluations. Our experiments also shows that this can be very bad as the final non-dominated solutions set is small and bad in terms of quality\
\
Also, the synergy between SE and EA is not very strong.\
\
Questions: adaptively determine if it is better to get rid of invalid solutions?\
\
}