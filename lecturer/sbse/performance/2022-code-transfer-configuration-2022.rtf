{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 This is an interesting paper that does three things:\
\
1. Use the stage level code to get code representation (by CNN) and the log to get scheduler representation (byGCN) \'97 a specific component in Spark. (5 different kind of features in total)\
2. Get the promising configuration based on probability for more samples, and train the actual regressor which is a MLP\
3. Using adversarial learning, such that the prediction loss is combined with a discriminator that distinguish between whether a sample is from the source or target domain \'97 aiming to transfer the model for new domain.}