{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The paper presents approach that analyze the goal model, that parse it for generating monitoring code at runtime for\
checking if feature fails, if they do fails, then potential feature interaction can be reported. The assumption is that\
ideally the feature should work indepedently and we need to avoid feature interaction. (feature here is functional)\
\
\
It seems the code generation is based on the boolean expression in the goal model, it then detect the pre-/post- conditions\
between ecah pair of feature, if any one fails (the aggregation) then it is feature interction\
\
bad\
\
how the code is generated, which is too simple? the goal model seem quite simple and require too much assmuption from the software engnieers. When not considering feature\
model?\
}